name: Advanced CI/CD

on:
  push: {}

jobs:
  unit_tests:
    name: Unit Tests
    if: ${{ github.ref != 'refs/heads/main' }}
    runs-on: [self-hosted]
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: npm install
      - name: Run tests
        run: npm test

  lint:
    name: Lint
    if: ${{ github.ref != 'refs/heads/main' }}
    runs-on: [self-hosted]
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: npm install
      - name: Run lint
        run: npm run lint

  build:
    name: Build and Push Docker
    needs: [unit_tests, lint]
    runs-on: [self-hosted]
    steps:
      - uses: actions/checkout@v4
      - name: Build and push image
        run: |
          TAG=szyban/ci-cd-kolo:${{ github.sha }}
          docker build -t $TAG .
          docker push $TAG
          echo "$TAG" > image-tag.txt
      - uses: actions/upload-artifact@v4
        with:
          name: image-tag
          path: image-tag.txt

  deploy_staging:
    name: Deploy to staging
    needs: build
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: [self-hosted]
    environment: staging
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: image-tag
      - name: Deploy staging
        run: |
          TAG=$(cat image-tag.txt)
          echo "Deploying to staging: $TAG"

  deploy_production:
    name: Deploy to production
    needs: deploy_staging
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: [self-hosted]
    environment: production
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: image-tag
      - name: Deploy production
        run: |
          TAG=$(cat image-tag.txt)
          echo "Deploying to production: $TAG"

  report:
    name: Generate report
    needs: [build, deploy_staging, deploy_production]
    if: always()
    runs-on: [self-hosted]
    steps:
      - name: Create report
        run: |
          echo "Pipeline status: ${{ job.status }}" > report.txt
          echo "build: ${{ needs.build.result }}" >> report.txt
          echo "staging: ${{ needs.deploy_staging.result }}" >> report.txt
          echo "production: ${{ needs.deploy_production.result }}" >> report.txt
      - uses: actions/upload-artifact@v4
        with:
          name: ci-report
          path: report.txt
